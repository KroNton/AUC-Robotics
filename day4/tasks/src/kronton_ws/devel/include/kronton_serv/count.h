// Generated by gencpp from file kronton_serv/count.msg
// DO NOT EDIT!


#ifndef KRONTON_SERV_MESSAGE_COUNT_H
#define KRONTON_SERV_MESSAGE_COUNT_H

#include <ros/service_traits.h>


#include <kronton_serv/countRequest.h>
#include <kronton_serv/countResponse.h>


namespace kronton_serv
{

struct count
{

typedef countRequest Request;
typedef countResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct count
} // namespace kronton_serv


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kronton_serv::count > {
  static const char* value()
  {
    return "8a38f8164047c2638e9719ed691830d0";
  }

  static const char* value(const ::kronton_serv::count&) { return value(); }
};

template<>
struct DataType< ::kronton_serv::count > {
  static const char* value()
  {
    return "kronton_serv/count";
  }

  static const char* value(const ::kronton_serv::count&) { return value(); }
};


// service_traits::MD5Sum< ::kronton_serv::countRequest> should match
// service_traits::MD5Sum< ::kronton_serv::count >
template<>
struct MD5Sum< ::kronton_serv::countRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kronton_serv::count >::value();
  }
  static const char* value(const ::kronton_serv::countRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kronton_serv::countRequest> should match
// service_traits::DataType< ::kronton_serv::count >
template<>
struct DataType< ::kronton_serv::countRequest>
{
  static const char* value()
  {
    return DataType< ::kronton_serv::count >::value();
  }
  static const char* value(const ::kronton_serv::countRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kronton_serv::countResponse> should match
// service_traits::MD5Sum< ::kronton_serv::count >
template<>
struct MD5Sum< ::kronton_serv::countResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kronton_serv::count >::value();
  }
  static const char* value(const ::kronton_serv::countResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kronton_serv::countResponse> should match
// service_traits::DataType< ::kronton_serv::count >
template<>
struct DataType< ::kronton_serv::countResponse>
{
  static const char* value()
  {
    return DataType< ::kronton_serv::count >::value();
  }
  static const char* value(const ::kronton_serv::countResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KRONTON_SERV_MESSAGE_COUNT_H
